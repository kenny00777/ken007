import pandas as pd

def demographic_data_analyzer():
    # Load the dataset into a DataFrame
    df = pd.read_csv('adult.data.csv', header=None, names=[
        'age', 'workclass', 'fnlwgt', 'education', 'education-num', 'marital-status', 
        'occupation', 'relationship', 'race', 'sex', 'capital-gain', 'capital-loss', 
        'hours-per-week', 'native-country', 'salary'
    ])

    # Count the number of people in each race
    race_count = df['race'].value_counts()

    # Calculate the average age of men
    average_age_men = round(df[df['sex'] == 'Male']['age'].mean(), 1)

    # Find the percentage of people with a Bachelor's degree
    percentage_bachelors = round((df['education'] == 'Bachelors').mean() * 100, 1)

    # Find the percentage of people with advanced education making >50K
    advanced_education = df['education'].isin(['Bachelors', 'Masters', 'Doctorate'])
    higher_education_rich = round((df[advanced_education & (df['salary'] == '>50K')].shape[0] / df[advanced_education].shape[0]) * 100, 1)

    # Find the percentage of people without advanced education making >50K
    lower_education = ~advanced_education
    lower_education_rich = round((df[lower_education & (df['salary'] == '>50K')].shape[0] / df[lower_education].shape[0]) * 100, 1)

    # Find the minimum number of hours someone works per week
    min_work_hours = df['hours-per-week'].min()

    # Calculate the percentage of people working the minimum hours who earn >50K
    min_workers = df[df['hours-per-week'] == min_work_hours]
    rich_percentage = round((min_workers[min_workers['salary'] == '>50K'].shape[0] / min_workers.shape[0]) * 100, 1)

    # Find the country with the highest percentage of people earning >50K
    rich_countries = df[df['salary'] == '>50K']['native-country'].value_counts()
    total_countries = df['native-country'].value_counts()
    highest_earning_country_percentage = round((rich_countries / total_countries).max() * 100, 1)
    highest_earning_country = (rich_countries / total_countries).idxmax()

    # Find the most popular occupation in India for those earning >50K
    india_occupations = df[(df['native-country'] == 'India') & (df['salary'] == '>50K')]['occupation']
    top_IN_occupation = india_occupations.value_counts().idxmax()

    # Return everything as a dictionary
    return {
        'race_count': race_count,
        'average_age_men': average_age_men,
        'percentage_bachelors': percentage_bachelors,
        'higher_education_rich': higher_education_rich,
        'lower_education_rich': lower_education_rich,
        'min_work_hours': min_work_hours,
        'rich_percentage': rich_percentage,
        'highest_earning_country': highest_earning_country,
        'highest_earning_country_percentage': highest_earning_country_percentage,
        'top_IN_occupation': top_IN_occupation
    }

# Run the function to check results
if __name__ == "__main__":
    results = demographic_data_analyzer()
    for key, value in results.items():
        print(f"{key}: {value}")
